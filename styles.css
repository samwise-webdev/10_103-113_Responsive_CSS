body {
    font-family: 'Open Sans', sans-serif;
}

h1 {
    text-align: center;
}

#container {
    background-color: #003049;
    width: 90%;
    height: 500px;
    margin: 0 auto;
    border: 5px solid #003049;
    display: flex; /* "turning it on" */
}

#container div { /* side note: if using flex-direction: column; (or column-reverse), the divs will NOT be 200px tall. They will compress to fit into the container */
    width: 200px;
    height: 200px;
}

/* The Flex Model

    flex-direction: row;
        Main Axis   horizontal           
        Cross Axis  vertical
        (left to right)

    flex-direction: reverse;
        Main Axis   horizontal           
        Cross Axis  vertical
        (right to left) 
        
    flex-direction: column;
        Main Axis   vertical           
        Cross Axis  horizontal
        (top to bottom)  
        
    flex-direction: column-reverse;
        Main Axis   vertical           
        Cross Axis  horizontal
        (bottom to top)
*/

/*Justify Content - determins how the content is distributed across the main axis and is dependent on the main axis direction. so by default it is left to right, but if you did reverse it would go right to left. 

    justify-content: flex-start; (default)
        stacks from the start of the main axis

    justify-content: flex-end;
        stacks from the end of the main axis
    
    justify-content: center;
        stacks the content in the center of the main axis
    
    justify-content: space-between;
        takes all of the extra space and distributes it between the elements, but NOT on the outside edges

    justify-content: space-around;
        gives each element the same amount of space around it
    
    justify-content: space-evenly;
        distribute the extra space so that each element has the same amount of space around it and the edges of the container/parent (depending on axis direction)5
*/